<div class="container">
  <div class="row">
    <div class="col-xs-12 col-sm-12 col-md-8 col-sm-offset-2">
      <div class="form-login">
        <p align="center"><span class="text-logo">secondary.</span></p>

        <h2>Edit <%= resource_name.to_s.humanize %></h2>

        <%= simple_form_for(resource, as: resource_name, url: registration_path(resource_name), html: { method: :put }) do |f| %>
          <%= f.error_notification %>

          <div class="form-inputs">

            <%= f.input :name, required: true, autofocus: true %>
            <%= f.input :email, required: true %>
            <%= f.input :cpf, required: true %>
            <%= f.input :document_number, required: true %>
            <%= f.input :birthdate, required: true %>
            <%= f.input :mother_name, required: true %>
            <%= f.input :father_name, required: true %>
            <%= f.input :address, required: true %>
            <%= f.input :phone, required: true %>
            <%= f.input :bank, required: true %>
            <%= f.input :account_agency, required: true %>
            <%= f.input :account_number, required: true %>
            <%= f.input :expedition_date, required: true %>

            <% if devise_mapping.confirmable? && resource.pending_reconfirmation? %>
              <p>Currently waiting confirmation for: <%= resource.unconfirmed_email %></p>
            <% end %>

            <%= f.input :password, autocomplete: "off", hint: "leave it blank if you don't want to change it", required: false %>
            <%= f.input :password_confirmation, required: false %>
            <%= f.input :current_password, hint: "we need your current password to confirm your changes", required: true %>
          </div>

          <div class="form-actions">
            <%= f.button :submit, "Update", class: "btn btn-primary" %>
          </div>
        <% end %>

        <h3>Cancel my account</h3>

        <p>Unhappy? <%= link_to "Cancel my account", registration_path(resource_name), data: { confirm: "Are you sure?" }, method: :delete %></p>

        <%= link_to "Back", :back %>
      </div>
    </div>
  </div>
</div>

<% content_for(:js) do %>
  <%= javascript_tag do %>
    var form = $("#example-advanced-form").show();

form.steps({
    headerTag: "h3",
    bodyTag: "fieldset",
    transitionEffect: "slideLeft",
    onStepChanging: function (event, currentIndex, newIndex)
    {
        // Allways allow previous action even if the current form is not valid!
        if (currentIndex > newIndex)
        {
            return true;
        }
        // Forbid next action on "Warning" step if the user is to young
        if (newIndex === 3 && Number($("#age-2").val()) < 18)
        {
            return false;
        }
        // Needed in some cases if the user went back (clean up)
        if (currentIndex < newIndex)
        {
            // To remove error styles
            form.find(".body:eq(" + newIndex + ") label.error").remove();
            form.find(".body:eq(" + newIndex + ") .error").removeClass("error");
        }
        form.validate().settings.ignore = ":disabled,:hidden";
        return form.valid();
    },
    onStepChanged: function (event, currentIndex, priorIndex)
    {
        // Used to skip the "Warning" step if the user is old enough.
        if (currentIndex === 2 && Number($("#age-2").val()) >= 18)
        {
            form.steps("next");
        }
        // Used to skip the "Warning" step if the user is old enough and wants to the previous step.
        if (currentIndex === 2 && priorIndex === 3)
        {
            form.steps("previous");
        }
    },
    onFinishing: function (event, currentIndex)
    {
        form.validate().settings.ignore = ":disabled";
        return form.valid();
    },
    onFinished: function (event, currentIndex)
    {
        alert("Submitted!");
    }
}).validate({
    errorPlacement: function errorPlacement(error, element) { element.before(error); },
    rules: {
        confirm: {
            equalTo: "#password-2"
        }
    }
});
  <% end %>
<% end %>
